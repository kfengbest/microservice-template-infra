AWSTemplateFormatVersion: '2010-09-09'
Description: AWS ElasticBeanstalk Application with Docker Environment
Parameters:

  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: The ID of the VPC for the ElasticBeanstalk application.

  PublicSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: A list of subnets for the load balancer.

  PrivateSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: A list of subnets for the instances.

  AutoScalingMinSize:
    Type: Number
    Description: The minium size of auto scaling group.
    Default: 1
    MinValue: 1
    MaxValue: 10000

  AutoScalingMaxSize:
    Type: Number
    Description: The maxium size of auto scaling group.
    Default: 1
    MinValue: 1
    MaxValue: 10000

  InstanceType:
    Type: String
    Description: EC2 instance type.
    Default: t1.micro
    AllowedValues: [
      "t2.micro",
      "t2.small",
      "t2.medium",
      "t2.large",
      "t2.xlarge",
      "t2.2xlarge",
      "m3.medium",
      "m3.large",
      "m3.xlarge",
      "m3.2xlarge",
      "c3.large",
      "c3.xlarge",
      "c3.2xlarge",
      "c3.4xlarge",
      "c3.8xlarge",
      "t1.micro",
      "t2.nano",
      "m1.small",
      "m1.medium",
      "m1.large",
      "m1.xlarge",
      "c1.medium",
      "c1.xlarge",
      "c4.large",
      "c4.xlarge",
      "c4.2xlarge",
      "c4.4xlarge",
      "c4.8xlarge",
      "c5.large",
      "c5.xlarge",
      "c5.2xlarge",
      "c5.4xlarge",
      "c5.9xlarge",
      "c5.18xlarge",
      "m2.xlarge",
      "m2.2xlarge",
      "m2.4xlarge",
      "r4.large",
      "r4.xlarge",
      "r4.2xlarge",
      "r4.4xlarge",
      "r4.8xlarge",
      "r4.16xlarge",
      "m4.large",
      "m4.xlarge",
      "m4.2xlarge",
      "m4.4xlarge",
      "m4.10xlarge",
      "m4.16xlarge",
      "cc1.4xlarge",
      "cc2.8xlarge",
      "hi1.4xlarge",
      "hs1.8xlarge",
      "cr1.8xlarge",
      "g2.2xlarge",
      "g2.8xlarge",
      "p2.xlarge",
      "p2.8xlarge",
      "p2.16xlarge",
      "p3.2xlarge",
      "p3.8xlarge",
      "p3.16xlarge",
      "i2.xlarge",
      "i2.2xlarge",
      "i2.4xlarge",
      "i2.8xlarge",
      "i3.large",
      "i3.xlarge",
      "i3.2xlarge",
      "i3.4xlarge",
      "i3.8xlarge",
      "i3.16xlarge",
      "r3.large",
      "r3.xlarge",
      "r3.2xlarge",
      "r3.4xlarge",
      "r3.8xlarge",
      "d2.xlarge",
      "d2.2xlarge",
      "d2.4xlarge",
      "d2.8xlarge",
      "x1.16xlarge",
      "x1.32xlarge",
      "x1e.32xlarge",
      "f1.2xlarge",
      "f1.16xlarge",
      "g3.4xlarge",
      "g3.8xlarge",
      "g3.16xlarge",
      "h1.2xlarge",
      "h1.4xlarge",
      "h1.8xlarge",
      "h1.16xlarge",
      "m5.large",
      "m5.xlarge",
      "m5.2xlarge",
      "m5.4xlarge",
      "m5.12xlarge",
      "m5.24xlarge"
    ]

Mappings:
  ELBAccountIDMap:
    us-east-1:
      Id: 127311923021
    us-east-2:
      Id: 033677994240
    us-west-1:
      Id: 027434742980
    us-west-2:
      Id: 797873946194
    ca-central-1:
      Id: 985666609251
    eu-west-1:
      Id: 156460612806
    eu-central-1:
      Id: 054676820928
    eu-west-2:
      Id: 652711504416
    ap-northeast-1:
      Id: 582318560864
    ap-northeast-2:
      Id: 600734575887
    ap-southeast-1:
      Id: 114774131450
    ap-southeast-2:
      Id: 783225319266
    ap-south-1:
      Id: 718504428378
    sa-east-1:
      Id: 507241528517
    us-gov-west-1:
      Id: 048591011584
    cn-north-1:
      Id: 638102146993

Resources:
  EBLogBucket:
    Type: AWS::S3::Bucket

  EBLogBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref EBLogBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Sid: AllowELBLogAccess
            Effect: Allow
            Principal:
              AWS: !FindInMap [ELBAccountIDMap, !Ref "AWS::Region", Id]
            Action:
              - "s3:PutObject"
            Resource:
              - !Sub
                - "${ResourcePath}/*"
                - ResourcePath: !GetAtt EBLogBucket.Arn

  EBInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier"

  EBInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EBInstanceRole

  EBServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: elasticbeanstalk.amazonaws.com
            Action:
              - sts:AssumeRole
            Condition:
              StringEquals:
                "sts:ExternalId": "elasticbeanstalk"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth"
        - "arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkService"

  EBApplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      Description: "Demo Application"
      ResourceLifecycleConfig:
        ServiceRole: !GetAtt EBServiceRole.Arn
        VersionLifecycleConfig:
          MaxAgeRule:
            DeleteSourceFromS3: false
            Enabled: false
            MaxAgeInDays: 180
          MaxCountRule:
            DeleteSourceFromS3: false
            Enabled: false
            MaxCount: 200

  EBConfigurationTemplate:
    Type: AWS::ElasticBeanstalk::ConfigurationTemplate
    Properties:
      ApplicationName: !Ref EBApplication
      SolutionStackName: "64bit Amazon Linux 2017.09 v2.8.1 running Docker 17.06.2-ce"
      OptionSettings:
        # Environment
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: EnvironmentType
          Value: LoadBalanced
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: ServiceRole
          Value: !Ref EBServiceRole
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: LoadBalancerType
          Value: application

        # Application Load balance
        - Namespace: aws:elasticbeanstalk:application
          OptionName: Application Healthcheck URL
          Value: '/'
        - Namespace: aws:elasticbeanstalk:healthreporting:system
          OptionName: SystemType
          Value: enhanced
        - Namespace: aws:elasticbeanstalk:environment:process:default
          OptionName: HealthCheckPath
          Value: '/'
        - Namespace: aws:elbv2:listener:default
          OptionName: ListenerEnabled
          Value: true

        # VPC configuration
        - Namespace: aws:ec2:vpc
          OptionName: VPCId
          Value: !Ref VPCId
        - Namespace: aws:ec2:vpc
          OptionName: Subnets
          Value:
            !Join
              - ','
              - !Ref PrivateSubnets
        - Namespace: aws:ec2:vpc
          OptionName: ELBSubnets
          Value:
            !Join
              - ','
              - !Ref PublicSubnets

        # Autoscaling Configuration
        - Namespace: aws:autoscaling:trigger
          OptionName: MeasureName
          Value: CPUUtilization
        - Namespace: aws:autoscaling:trigger
          OptionName: UpperThreshold
          Value: 80
        - Namespace: aws:autoscaling:trigger
          OptionName: LowerThreshold
          Value: 20
        - Namespace: aws:autoscaling:trigger
          OptionName: Unit
          Value: Percent
        - Namespace: aws:autoscaling:asg
          OptionName: MinSize
          Value: !Ref AutoScalingMinSize
        - Namespace: aws:autoscaling:asg
          OptionName: MaxSize
          Value: !Ref AutoScalingMaxSize
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value: !GetAtt EBInstanceProfile.Arn

        # Logging
        # ELB logging
        - Namespace: aws:elbv2:loadbalancer
          OptionName: AccessLogsS3Enabled
          Value: true
        - Namespace: aws:elbv2:loadbalancer
          OptionName: AccessLogsS3Bucket
          Value: !Ref EBLogBucket
        # EC2 logging
        - Namespace: aws:elasticbeanstalk:hostmanager
          OptionName: LogPublicationControl
          Value: true
        # Streaming log
        - Namespace: aws:elasticbeanstalk:cloudwatch:logs
          OptionName: StreamLogs
          Value: true
        - Namespace: aws:elasticbeanstalk:cloudwatch:logs
          OptionName: DeleteOnTerminate
          Value: true
        - Namespace: aws:elasticbeanstalk:cloudwatch:logs
          OptionName: RetentionInDays
          Value: 7


  EBEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName: !Ref EBApplication
      Tier:
        Name: WebServer
        Type: Standard
      SolutionStackName: "64bit Amazon Linux 2017.09 v2.8.1 running Docker 17.06.2-ce"
      TemplateName:
        !Ref EBConfigurationTemplate


Outputs:
  ApplicationName:
    Description: Name of the Application
    Value: !Ref EBApplication
  EnvironmentName:
    Description: Name of the Environment
    Value: !Ref EBEnvironment
  EndpointURL:
    Description: The URL to the load balancer for this environment.
    Value: !GetAtt EBEnvironment.EndpointURL
